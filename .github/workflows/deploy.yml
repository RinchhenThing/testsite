<<<<<<< HEAD
name: Build and Deploy Docker Image to Server

on:
  push:
    branches:
      - main

env:
  # Use ghcr.io for the registry
  REGISTRY: ghcr.io
  # The image name will be your-github-username/your-repo-name
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    # Permissions are needed to push to the GitHub Container Registry
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to the Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Deploy container on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # Pull the specific image version from the registry
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            
            # Stop and remove the old container if it exists
            docker stop test-website || true
            docker rm test-website || true
            
            # Run the new container with the specific image tag and a restart policy
            docker run -d --name test-website --restart always -p 80:80 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            
            # Clean up old, dangling images to save disk space
            docker image prune -f
=======
name: Sync Code to Server on Push

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH key and known_hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.REMOTE_HOST }} >> ~/.ssh/known_hosts

      - name: Sync code to server using rsync
        run: |
          rsync -avz --delete -e "ssh -i ~/.ssh/id_rsa" ./ ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:/root/testsite
>>>>>>> 3f1767ca5ac9b244e94f4f9c1838a5943e78c7a1
